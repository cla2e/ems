<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gma.ems.dao.UserDao">
    <!-- User的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_User_Map" type="com.gma.ems.entity.User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="real_name" property="realName" />
        <result column="sex" property="sex" />
    </resultMap>

    <!-- 数据库中表名为:t_user的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_user_Column">
        t_user.id as id
        ,t_user.username as username
        ,t_user.password as password
        ,t_user.real_name as real_name
        ,t_user.sex as sex
    </sql>

    <!--获得类名为:User对应的数据库表的数据总行数 -->
    <select id="getUserRowCount" resultType="java.lang.Long">
        select count(id) from t_user
    </select>
    <!-- 获得类名为:User对应数据库中表的数据集合 -->
    <select id="selectUser" resultMap="result_User_Map">
        select
        <include refid="t_user_Column" />
        from t_user
    </select>

    <!-- 获得一个User对象,以参数User对象中不为空的属性作为条件进行查询-->
    <select id="selectUserByObj" parameterType="com.gma.ems.entity.User" resultMap="result_User_Map">
        select
        <include refid="t_user_Column" />
        from t_user
        <where>
            <if test="sex != null "> and t_user.sex = #{sex}</if>
            <if test="realName != null "> and t_user.real_name = #{realName}</if>
            <if test="password != null "> and t_user.password = #{password}</if>
            <if test="username != null "> and t_user.username = #{username}</if>
            <if test="id != null "> and t_user.id = #{id}</if>
        </where>
    </select>

    <!-- 通过User的id获得对应数据库中表的数据对象-->
    <select id="selectUserById" parameterType="java.lang.Integer" resultMap="result_User_Map">
        select
        <include refid="t_user_Column" />
        from t_user
        where t_user.id = #{id}
    </select>

    <!-- 将User插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertUser" parameterType="com.gma.ems.entity.User">
        insert into t_user(id,username,password,real_name,sex)
        values(#{id},#{username},#{password},#{realName},#{sex})
    </insert>

    <!-- 将User中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyUser" parameterType="com.gma.ems.entity.User">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="realName != null">real_name,</if>
            <if test="sex != null">sex,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="username != null"> #{username},</if>
            <if test="password != null"> #{password},</if>
            <if test="realName != null"> #{realName},</if>
            <if test="sex != null"> #{sex},</if>
        </trim>
    </insert>

    <!-- 通过User的id将数据库表中对应的数据删除-->
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete from t_user
        where id = #{id}
    </delete>

    <!-- 通过User的id将User的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateUserById" parameterType="com.gma.ems.entity.User">
        update t_user set
                          username=#{username}
                ,password=#{password}
                ,real_name=#{realName}
                ,sex=#{sex}
        where id=#{id}
    </update>

    <!-- 通过User的id将User中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyUserById" parameterType="com.gma.ems.entity.User">
        update t_user
        <set>
            <if test="username != null">
                username=#{username},
            </if>
            <if test="password != null">
                password=#{password},
            </if>
            <if test="realName != null">
                real_name=#{realName},
            </if>
            <if test="sex != null">
                sex=#{sex},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>